{"version":3,"sources":["components/dialogs/dialogs.module.css","components/users/users.module.css","components/navbar/navbar.module.css","components/header/header.module.css","components/profile/myPosts/post/post.module.css","serviceWorker.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/usersReducer.js","redux/reduxStore.js","components/header/header.jsx","components/navbar/navbar.jsx","components/profile/profileInfo/profileInfo.jsx","components/profile/myPosts/post/post.jsx","components/profile/myPosts/myPosts.jsx","components/profile/myPosts/myPostsContainer.jsx","components/profile/profile.jsx","components/news/news.jsx","components/users/usersContainer.jsx","components/users/users.jsx","components/music/music.jsx","components/setting/setting.jsx","components/dialogs/dialogsItem/dialogsItem.jsx","components/dialogs/message/message.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogsContainer.jsx","App.js","index.js"],"names":["module","exports","dialogs","dialogs_item","dialog","active","messages","message","avatar","pages","nav","item","header","Boolean","window","location","hostname","match","initialState","postsData","id","newPostText","profileReducer","state","arguments","length","undefined","action","type","newPost","stateCopy","Object","objectSpread","toConsumableArray","push","text","dialogsData","name","messagesData","newMessageBody","dialogsReducer","body","concat","users","pageSize","totalCount","currentPage","usersReducer","map","user","userId","followed","data","items","page","reducers","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","compose","__REDUX_DEVTOOLS_EXTENSION__","Header","react_default","a","createElement","className","classes","src","alt","Navbar","react_router_dom","to","activeClassName","ProfileInfo","Post","props","MyPosts","posts","post","post_post","newPostElement","React","createRef","profile","ref","cols","rows","value","onChange","current","updatePostText","onClick","addPost","MyPostsContainer","connect","dispatch","apdatePostTextActionCreator","Profile","profileInfo","myPostsContainer","News","UsersContainer","follow","unFollow","setUsers","setCurrentPage","useEffect","axios","get","then","respons","pagesCount","Math","ceil","i","el","pageNumberClass","key","photos","small","status","Music","Setting","DialogItem","Message","Dialogs","dialogsElements","dialogsItem","messagesElement","message_message","newMyMessage","e","target","updateMessage","addMessage","DialogsContainer","App","navbar","react_router","path","render","dialogsContainer","news","music","setting","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.703946fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2B_-5\",\"dialogs_item\":\"dialogs_dialogs_item__1Nq8y\",\"dialog\":\"dialogs_dialog__2oT6c\",\"active\":\"dialogs_active__25GoT\",\"messages\":\"dialogs_messages__3lqZz\",\"message\":\"dialogs_message__1Id2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"users_avatar__gOvd9\",\"pages\":\"users_pages__2zuKX\",\"active\":\"users_active__148JP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__3IIWD\",\"item\":\"navbar_item__2CJlB\",\"active\":\"navbar_active__1LL-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__11cOo\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nlet initialState = {\n  postsData: [\n    { id: 1, message: \"hi, how are you?\" },\n    { id: 2, message: \"its my first post\" },\n    { id: 3, message: \"i am fine\" },\n    { id: 4, message: \"yoo\" },\n    { id: 5, message: \"you good boy\" },\n    { id: 6, message: \"you to! Lol)\" }\n  ],\n  newPostText: 'new Post',\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type){\n      case ADD_POST :{\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n        };\n        let stateCopy = {...state}\n        stateCopy.postsData = [...state.postsData];\n        stateCopy.postsData.push(newPost);\n        stateCopy.newPostText = '';\n        return stateCopy;\n      }\n      \n      case UPDATE_NEW_POST_TEXT: {\n        let stateCopy = {...state}\n        stateCopy.newPostText = action.text;\n        return stateCopy;\n      }\n      default: return state;\n    }\n\n  \n}\n\nexport const addPostActionCreator = () =>({type: ADD_POST});\n\nexport const apdatePostTextActionCreator = (text) =>({\n  type: UPDATE_NEW_POST_TEXT,\n  text:text\n})\n\n\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {\n  dialogsData: [\n    { id: 1, name: \"Dimych\" },\n    { id: 2, name: \"Valera\" },\n    { id: 3, name: \"Valya\" },\n    { id: 4, name: \"Andrey\" },\n    { id: 5, name: \"Artem\" },\n    { id: 6, name: \"Sasha\" }\n  ],\n  messagesData: [\n    { id: 1, message: \"hi how are you\" },\n    { id: 2, message: \"hi\" },\n    { id: 3, message: \"i am fine\" },\n    { id: 4, message: \"yoo\" },\n    { id: 5, message: \"wazzzap\" },\n    { id: 6, message: \"omg\" }\n  ],\n  newMessageBody: \"\",\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n  switch (action.type){\n  \n    case UPDATE_NEW_MESSAGE_BODY: {\n      let stateCopy = {\n        ...state,\n        newMessageBody: action.body,\n      };\n      return stateCopy;\n    }\n    case SEND_MESSAGE: {\n      let body = state.newMessageBody;\n      let stateCopy = {\n        ...state,\n        newMessageBody:  '',\n        messagesData: [...state.messagesData, { id: 6, message: body }]\n      };\n      return stateCopy;\n    }    \n    default: return state;\n  }\n}\n\nexport const sendMessageCreator = () =>({type: SEND_MESSAGE});\n \nexport const updateNewMessageBodyCreator = (body) =>({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body:body\n})\n\nexport default dialogsReducer;","const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = \"SET_USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\n\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalCount: 0,\n  currentPage:1\n\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type){\n      case FOLLOW: {\n        return {\n          ...state,\n          users: state.users.map(user => {\n            if (user.id === action.userId){\n              return {...user, followed: true }\n            }\n            return user\n          })\n        }\n      }\n      case UNFOLLOW: {\n        return {\n          ...state,\n          users: state.users.map(user => {\n            if (user.id === action.userId){\n              return {...user, followed: false }\n            }\n            return user\n          })\n        }\n      }\n      case SET_USERS: {\n        return {\n          ...state,\n          users: [...action.data.items],\n          totalCount: action.data.totalCount\n        }\n      }\n      case SET_CURRENT_PAGE: {\n        return {\n          ...state,\n          currentPage: action.page\n        }\n      }\n      default: return state;\n    }\n\n  \n}\n\nexport const followAC = (userId) =>({type: FOLLOW, userId});\n\nexport const unFollowAC = (userId) =>({ type: UNFOLLOW, userId})\n\nexport const setUsersAC = (data) =>({ type: SET_USERS, data})\n\nexport const setCurrentPageAC = (page) =>({ type: SET_CURRENT_PAGE, page})\n\n\nexport default usersReducer;","import {createStore, combineReducers, compose } from \"redux\";\nimport profileReducer from \"./profileReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport usersReducer from \"./usersReducer\";\n// import thunkMiddleware from \"redux-thunk\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n});\n\nlet store = createStore(reducers,\n  compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) //, applyMiddleware(thunkMiddleware)\n  );\n\nexport default store; ","import React from 'react';\nimport classes from './header.module.css';\n\n\nconst Header = () => {\n  return (\n    <header className={classes.header}>\n      <img src = \"https://i.pinimg.com/736x/33/b8/69/33b869f90619e81763dbf1fccc896d8d--lion-logo-modern-logo.jpg\" alt = \"logo\"/> \n    </header>\n  );\n};\nexport default Header;","import React from 'react';\nimport classes from './navbar.module.css';\nimport { NavLink } from 'react-router-dom';\n\n\nconst Navbar = () => (\n  <nav className={classes.nav}>\n    <div className={`${classes.item}`}>\n      <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n    </div>\n    <div className={classes.item}>\n      <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n    </div>\n    <div className={classes.item}>\n      <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n    </div>\n    <div className={classes.item}>\n      <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\n    </div>\n    <div className={classes.item}>\n      <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\n    </div>\n    <div className={classes.item}>\n      <NavLink to=\"/setting\" activeClassName={classes.active}>Setting</NavLink>\n    </div>\n  </nav>\n);\nexport default Navbar; ","import React from 'react';\n\nconst ProfileInfo= () =>(\n    <div>\n       <div>\n        <img alt='' src = \"https://asiamountains.net/upload/slide/slide-1960x857-07.jpg\"></img>\n       </div>\n       <div>\n         ava + description\n       </div>\n     </div>\n);\nexport default ProfileInfo;","import React from 'react';\nimport classes from './post.module.css';\n\n\nconst Post = (props) => (\n  <div className = {classes.item}>\n    <img alt='' src = 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Cameronavatar.jpg/220px-Cameronavatar.jpg'/>\n    {props.message}\n  </div>\n);\nexport default Post;","import React from 'react';\nimport classes from './myPosts.module.css';\nimport Post from './post/post';\n\n\n\nconst MyPosts = (props) => {\n\n  let posts = \n    props.profilePage.postsData.map(post => <Post message = {post.message}/>);\n\n  const newPostElement = React.createRef();\n  let onAddPost = () =>{\n    props.addPost();\n  };\n\n  let onUpdatePostText = () =>{\n    let text = newPostElement.current.value\n    props.updatePostText(text);\n  }\n\n  return (\n    <div className={classes.profile}>\n      <div>\n        My Posts\n         <div>\n          <textarea ref={ newPostElement }\n            cols=\"30\"\n            rows=\"5\"\n            value = {props.profilePage.newPostText}\n            onChange = { onUpdatePostText }/>\n        </div>\n        <div>\n          <button\n            onClick={onAddPost}>\n              add post\n          </button>\n        </div>\n        <div className={classes.posts}>\n          {posts}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MyPosts;","import { addPostActionCreator, apdatePostTextActionCreator } from '../../../redux/profileReducer';\nimport MyPosts from './myPosts';\nimport { connect } from 'react-redux';\n\n\n\n\nlet mapStateToProps = (state) => {\n  return {\n    profilePage: state.profilePage,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updatePostText: (text)=>{\n      dispatch(apdatePostTextActionCreator(text));\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator())\n    }\n  };\n};\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps )(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './profileInfo/profileInfo';\nimport MyPostsContainer from './myPosts/myPostsContainer';\n\n\nconst Profile = (props) =>(\n    <div>\n       <ProfileInfo/>\n       <MyPostsContainer\n         store = {props.store} \n        />\n     </div>\n);\nexport default Profile;","import React from 'react';\n\n\nconst News = (props) => {\n  return (\n    <div>\n      news\n    </div>\n  );\n};\nexport default News;","import { followAC, unFollowAC, setUsersAC, setCurrentPageAC } from '../../redux/usersReducer';\nimport {Users} from './users';\nimport { connect } from 'react-redux';\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n     ...state.usersPage,\n    };\n  };\n  \n\n  export const UsersContainer = connect(mapStateToProps, {\n    follow: followAC,\n    unFollow: unFollowAC,\n    setUsers: setUsersAC,\n    setCurrentPage: setCurrentPageAC,\n  } )(Users)","import React, { useEffect } from \"react\"\nimport classes from './users.module.css';\nimport axios from \"axios\";\n\n\n\nexport const Users = (props) => {\n\n  useEffect(() => {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${props.pageSize}&page=${props.currentPage}`).then(respons => {\n      props.setUsers(respons.data)\n    })\n  },[props, props.currentPage])\n\n\n\n  const pagesCount = Math.ceil(props.totalCount / props.pageSize)\n\n  const pages = []\n  for (let i = 0; i < pagesCount; i++){\n    pages.push(i+1);\n  }\n\n\n  return (\n    <div>\n      <div>\n        { \n          pages.map(el => {\n            let pageNumberClass = `${classes.pages} ${props.currentPage === el && classes.active}`\n            return <span \n              onClick = {() => {\n                props.setCurrentPage(el)\n              }}\n              key = {el} \n              className={pageNumberClass}>{el}</span>\n          })  \n        }\n      </div>\n      {\n        props.users.map(user => <div key = {user.id}>\n          <span>\n            <div>\n              <img alt=\"\" className={classes.avatar} src={user.photos.small || \"https://w7.pngwing.com/pngs/931/209/png-transparent-computer-icons-symbol-avatar-logo-person-with-helmut-miscellaneous-black-silhouette.png\"}/> \n            </div>\n            <div>\n              {\n                user.followed? <button onClick = {() => props.unFollow(user.id)}>Unfollow</button> :\n                <button onClick = {() => props.follow(user.id)}>Follow</button>\n              }\n              \n            </div>\n          </span>\n          <span>\n            <span>\n              <div>{user.name}</div> <div>{user.status}</div>\n            </span>\n          </span>\n        </div>)\n      }\n    </div>\n  )\n}","import React from 'react';\n\n\nconst Music = (props) => {\n  return (\n    <div>\n      Music\n    </div>\n  );\n};\nexport default Music;","import React from 'react';\n\n\nconst Setting = (props) => {\n  return (\n    <div>\n      Setting\n    </div>\n  );\n};\nexport default Setting;","import React from 'react';\nimport classes from './../dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  return (\n    <div className={`${classes.dialog}`}>\n      <NavLink to={`/dialogs/${props.id}`} activeClassName={classes.active}>{props.name}</NavLink>\n    </div>\n  );\n};\n\n \nexport default DialogItem;","import React from 'react';\nimport classes from './../dialogs.module.css';\n\nconst Message = (props) => {\n  return (\n    <div className={classes.message}>{props.message}</div>\n  );\n};\n\nexport default Message;","import React from 'react';\nimport classes from './dialogs.module.css';\nimport DialogItem from './dialogsItem/dialogsItem';\nimport Message from './message/message';\n\n\nconst  Dialogs = (props) => {\n\n  const dialogsElements =\n    props.dialogsPage.dialogsData.map(dialog => <DialogItem name = {dialog.name} id = {dialog.id}/>);\n    \n  const messagesElement =\n    props.dialogsPage.messagesData.map(message => <Message message = {message.message}/>);\n  \n  const newMessageBody = props.dialogsPage.newMessageBody;\n    \n  const newMyMessage = React.createRef();\n    \n  const addMessage = () => {\n    props.addMessage();\n  };\n\n  const updateMessage = (e) => {\n    \n    const text = e.target.value;\n    props.updateMessage(text)\n  };\n\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogs_item}>\n      {dialogsElements}\n      </div>\n      <div className={classes.messages}>\n        <div>{messagesElement}</div>\n        <div>\n          <div><textarea  value = {newMessageBody} ref = {newMyMessage} cols=\"30\" rows=\"10\" onChange = {updateMessage }></textarea></div>\n          <div><button onClick = {addMessage}>submit</button></div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Dialogs;","import { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './dialogs';\nimport { connect } from 'react-redux';\n\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateMessage: (text)=>{\n      dispatch(updateNewMessageBodyCreator(text))\n    },\n    addMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps )(Dialogs)\n\n\nexport default DialogsContainer;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header/header';\nimport Navbar from './components/navbar/navbar';\nimport Profile from './components/profile/profile';\nimport { Route } from 'react-router-dom';\nimport News from './components/news/news';\nimport { UsersContainer }  from './components/users/usersContainer';\nimport Music from './components/music/music';\nimport Setting from './components/setting/setting';\nimport DialogsContainer from './components/dialogs/dialogsContainer';\n\n\nconst App = (props) => (\n        <div className=\"app-wrapper\">\n            <Header />\n            <Navbar />\n            {/* <Profile/> */}\n            <div className=\"app-wrapper-content\">\n                <Route\n                    path = \"/profile\"\n                    render = {\n                        () => <Profile\n                            store = {props.store}\n                        />\n                    }\n                />\n                <Route path = \"/dialogs\" render={() => <DialogsContainer   store = {props.store}/>} />\n                <Route path = \"/news\" render={() => <News/>} />\n                <Route path = \"/music\" render={() => <Music/>} />\n                <Route path = \"/setting\" render={() => <Setting/>} />\n                <Route path = \"/users\" render={() => <UsersContainer   store = {props.store}/>} />\n\n            </div>\n\n        </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/reduxStore';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider  store = {store}>\n      <App\n        \n      />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}